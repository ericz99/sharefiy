// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("LOCAL_DATABASE_URL")
}

enum PlanType {
  free_plan
  standard_plan
  pro_plan
}

enum SubscriptionStatus {
  trialing
  active
  canceled
  incomplete
  incomplete_expired
  past_due
  unpaid
  paused
}

enum PricingPlanInterval {
  month
  year
}

enum PricingType {
  one_time
  recurring
}

model User {
  id             String           @id @default(cuid())
  stripeUserId   String?          @unique
  name           String?
  username       String?          @unique
  email          String?          @unique
  password       String?
  credit         Int              @default(0)
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  paymentHistory PaymentHistory[]
  sub            Subscription?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Account {
  id                       String   @id @default(cuid())
  user                     User?    @relation(fields: [userId], references: [id])
  userId                   String?  @unique
  provider                 String
  providerAccountId        String
  access_token             String?  @db.Text
  refresh_token            String?  @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?  @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  type                     String
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Product {
  id          String   @id
  active      Boolean
  name        String
  description String?
  image       String
  metadata    Json?
  price       Price?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Price {
  id             String              @id
  productId      String              @unique
  product        Product             @relation(fields: [productId], references: [id])
  active         Boolean
  description    String?
  unitAmount     Float
  currency       String
  type           PricingType         @default(recurring)
  interval       PricingPlanInterval @default(month)
  intervalCount  Int                 @default(1)
  trialPeriodDay Int
  metadata       Json?
  subs           Subscription[]
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
}

model Subscription {
  id                 String             @id
  user               User               @relation(fields: [userId], references: [id])
  userId             String             @unique
  status             SubscriptionStatus
  metadata           Json?
  price              Price              @relation(references: [id], fields: [priceId])
  priceId            String
  cancelAtPeriodEnd  Boolean
  currentPeriodStart DateTime?          @default(now())
  currentPeriodEnd   DateTime?
  endAt              DateTime?
  cancelAt           DateTime?
  canceledAt         DateTime?
  trialStart         DateTime?
  trialEnd           DateTime?
  active             Boolean            @default(true)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model PaymentHistory {
  id                      String   @id @default(cuid())
  stripeCheckoutSessionId String   @unique
  user                    User     @relation(fields: [userId], references: [id])
  userId                  String
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}
